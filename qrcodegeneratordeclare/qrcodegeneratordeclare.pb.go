// Code generated by protoc-gen-go. DO NOT EDIT.
// source: qrcodegeneratordeclare.proto

package qrcodegeneratordeclare

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StatusData_Status int32

const (
	StatusData_SUCCEED StatusData_Status = 0
	StatusData_ERROR   StatusData_Status = 1
)

var StatusData_Status_name = map[int32]string{
	0: "SUCCEED",
	1: "ERROR",
}

var StatusData_Status_value = map[string]int32{
	"SUCCEED": 0,
	"ERROR":   1,
}

func (x StatusData_Status) String() string {
	return proto.EnumName(StatusData_Status_name, int32(x))
}

func (StatusData_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a86dcee61a57643c, []int{1, 0}
}

type Request struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_a86dcee61a57643c, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type StatusData struct {
	Status               StatusData_Status `protobuf:"varint,1,opt,name=status,proto3,enum=qrcodegeneratordeclare.StatusData_Status" json:"status,omitempty"`
	Msg                  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StatusData) Reset()         { *m = StatusData{} }
func (m *StatusData) String() string { return proto.CompactTextString(m) }
func (*StatusData) ProtoMessage()    {}
func (*StatusData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a86dcee61a57643c, []int{1}
}

func (m *StatusData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusData.Unmarshal(m, b)
}
func (m *StatusData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusData.Marshal(b, m, deterministic)
}
func (m *StatusData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusData.Merge(m, src)
}
func (m *StatusData) XXX_Size() int {
	return xxx_messageInfo_StatusData.Size(m)
}
func (m *StatusData) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusData.DiscardUnknown(m)
}

var xxx_messageInfo_StatusData proto.InternalMessageInfo

func (m *StatusData) GetStatus() StatusData_Status {
	if m != nil {
		return m.Status
	}
	return StatusData_SUCCEED
}

func (m *StatusData) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Response struct {
	Status               *StatusData `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 string      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a86dcee61a57643c, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() *StatusData {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Response) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterEnum("qrcodegeneratordeclare.StatusData_Status", StatusData_Status_name, StatusData_Status_value)
	proto.RegisterType((*Request)(nil), "qrcodegeneratordeclare.Request")
	proto.RegisterType((*StatusData)(nil), "qrcodegeneratordeclare.StatusData")
	proto.RegisterType((*Response)(nil), "qrcodegeneratordeclare.Response")
}

func init() { proto.RegisterFile("qrcodegeneratordeclare.proto", fileDescriptor_a86dcee61a57643c) }

var fileDescriptor_a86dcee61a57643c = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x50, 0xbf, 0x4b, 0xc4, 0x30,
	0x14, 0xbe, 0x9c, 0x9a, 0xb3, 0xef, 0x40, 0xca, 0x1b, 0xe4, 0x10, 0xc5, 0x92, 0x49, 0x97, 0x1b,
	0xea, 0xe6, 0x26, 0x77, 0x19, 0x45, 0x4c, 0x71, 0xe9, 0x16, 0xdb, 0x47, 0x11, 0xb4, 0x69, 0x93,
	0xd4, 0x7f, 0xc0, 0x7f, 0x5c, 0x9a, 0x56, 0x8b, 0x60, 0xb9, 0xed, 0x0b, 0xf9, 0xde, 0xf7, 0x0b,
	0x2e, 0x5b, 0x5b, 0x98, 0x92, 0x2a, 0xaa, 0xc9, 0x6a, 0x6f, 0x6c, 0x49, 0xc5, 0xbb, 0xb6, 0xb4,
	0x6d, 0xac, 0xf1, 0x06, 0xcf, 0xff, 0xff, 0x15, 0x57, 0xb0, 0x52, 0xd4, 0x76, 0xe4, 0x3c, 0x22,
	0x1c, 0x97, 0xda, 0xeb, 0x0d, 0x4b, 0xd8, 0x4d, 0xa4, 0x02, 0x16, 0x5f, 0x0c, 0x20, 0xf3, 0xda,
	0x77, 0x6e, 0xaf, 0xbd, 0xc6, 0x07, 0xe0, 0x2e, 0xbc, 0x02, 0xe9, 0x2c, 0xbd, 0xdd, 0xce, 0x98,
	0x4e, 0x37, 0x23, 0x54, 0xe3, 0x21, 0xc6, 0x70, 0xf4, 0xe1, 0xaa, 0xcd, 0x32, 0x98, 0xf4, 0x50,
	0x24, 0xc0, 0x07, 0x0e, 0xae, 0x61, 0x95, 0xbd, 0xec, 0x76, 0x52, 0xee, 0xe3, 0x05, 0x46, 0x70,
	0x22, 0x95, 0x7a, 0x52, 0x31, 0x13, 0x39, 0x9c, 0x2a, 0x72, 0x8d, 0xa9, 0x1d, 0xe1, 0xfd, 0x9f,
	0x08, 0xeb, 0x54, 0x1c, 0x8e, 0xf0, 0xeb, 0xfd, 0xd3, 0x70, 0x39, 0x35, 0x4c, 0x73, 0x88, 0x9e,
	0x6d, 0x46, 0xf6, 0xf3, 0xad, 0x20, 0x7c, 0x04, 0x2e, 0xeb, 0x5e, 0x0d, 0xaf, 0xe7, 0x64, 0xc7,
	0xb5, 0x2e, 0x92, 0x79, 0xc2, 0x90, 0x54, 0x2c, 0x5e, 0x79, 0xd8, 0xfe, 0xee, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x8e, 0xe7, 0x55, 0x20, 0x9b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QrServiceClient is the client API for QrService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QrServiceClient interface {
	Encode(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type qrServiceClient struct {
	cc *grpc.ClientConn
}

func NewQrServiceClient(cc *grpc.ClientConn) QrServiceClient {
	return &qrServiceClient{cc}
}

func (c *qrServiceClient) Encode(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/qrcodegeneratordeclare.QrService/Encode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QrServiceServer is the server API for QrService service.
type QrServiceServer interface {
	Encode(context.Context, *Request) (*Response, error)
}

// UnimplementedQrServiceServer can be embedded to have forward compatible implementations.
type UnimplementedQrServiceServer struct {
}

func (*UnimplementedQrServiceServer) Encode(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Encode not implemented")
}

func RegisterQrServiceServer(s *grpc.Server, srv QrServiceServer) {
	s.RegisterService(&_QrService_serviceDesc, srv)
}

func _QrService_Encode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QrServiceServer).Encode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qrcodegeneratordeclare.QrService/Encode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QrServiceServer).Encode(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _QrService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "qrcodegeneratordeclare.QrService",
	HandlerType: (*QrServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Encode",
			Handler:    _QrService_Encode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "qrcodegeneratordeclare.proto",
}
